{"version":3,"sources":["utils/fetchClient.ts","utils/StatusOfFilter.ts","api/todos.ts","LoadDeleteContext.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","StatusOfFilter","client","getTodos","userId","deleteTodo","id","modifyTodo","LoadDeleteContext","React","createContext","loadDelete","setLoadDelete","LoadDeleteProvider","children","useState","contextValue","Provider","value","TodoItem","todo","updateTodo","clearTodo","editingTitle","isEditing","setIsEditing","title","editingValue","setEditingValue","inputRef","useRef","useEffect","current","focus","useContext","className","classNames","completed","onDoubleClick","event","target","ref","type","onChange","checked","placeholder","onKeyDown","key","trim","onBlur","onClick","includes","TodoList","todos","setTodos","removeTodo","tempTodo","prevState","map","prevTodo","catch","finally","TransitionGroup","CSSTransition","timeout","TodoFilter","filter","setFilter","href","selected","All","Active","Completed","USER_ID","App","setTempTodo","errorMessage","setErrorMessage","setValue","completedTodos","notCompletedTodos","a","fetchTodos","handleKeyDown","preventDefault","currentTarget","newTodo","newTempTodo","prevTodos","updatedTodos","filteredTodos","length","active","idOfAllTodos","item","isChecked","forEach","currentTodo","disabled","idOfCompletedTodos","style","visibility","hidden","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4ca502e.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export enum StatusOfFilter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const postTodos = (data: Omit<Todo, 'id'>) => {\n  return client.post<Todo>('/todos', data);\n};\n\nexport const deleteTodo = (id: number) => {\n  return client.delete(`/todos/${id}`);\n};\n\nexport const modifyTodo = (id: number, data: Todo) => {\n  return client.patch(`/todos/${id}`, data);\n};\n","import React, { ReactNode, useState } from 'react';\n\ntype LangContextType = {\n  loadDelete: number[];\n  setLoadDelete: (id: number[]) => void;\n};\n\nexport const LoadDeleteContext = React.createContext<LangContextType>({\n  loadDelete: [],\n  setLoadDelete: () => {},\n});\n\ninterface LangProviderProps {\n  children: ReactNode;\n}\n\nexport const LoadDeleteProvider = ({ children }: LangProviderProps) => {\n  const [loadDelete, setLoadDelete] = useState<number[]>([]);\n\n  const contextValue = {\n    loadDelete,\n    setLoadDelete,\n  };\n\n  return (\n    <LoadDeleteContext.Provider value={contextValue}>\n      {children}\n    </LoadDeleteContext.Provider>\n  );\n};\n","import React, {\n  useState,\n  useContext,\n  useEffect,\n  useRef,\n} from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { LoadDeleteContext } from '../../LoadDeleteContext';\n\ntype Props = {\n  todo: Todo;\n  updateTodo?: (event: React.ChangeEvent<HTMLInputElement>, todo: Todo) => void;\n  clearTodo?: (todo: Todo) => void;\n  editingTitle?: (todo: Todo, title: string) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  updateTodo,\n  clearTodo,\n  editingTitle,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingValue, setEditingValue] = useState(todo.title);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (isEditing && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isEditing]);\n\n  const onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      if (editingValue.trim() === '' && clearTodo) {\n        clearTodo(todo);\n        setIsEditing(false);\n      } else if (editingValue === todo.title) {\n        setIsEditing(false);\n      } else if (editingTitle) {\n        editingTitle(todo, editingValue);\n        setIsEditing(false);\n      }\n    } else if (event.key === 'Escape') {\n      setIsEditing(false);\n      setEditingValue(todo.title);\n    }\n  };\n\n  const onBlur = () => {\n    if (editingValue.trim() === '' && clearTodo) {\n      clearTodo(todo);\n      setIsEditing(false);\n    } else if (editingValue === todo.title) {\n      setIsEditing(false);\n    } else if (editingTitle) {\n      editingTitle(todo, editingValue);\n      setIsEditing(false);\n    }\n  };\n\n  const {\n    loadDelete,\n  } = useContext(LoadDeleteContext);\n\n  return (\n    <>\n      <div\n        className={classNames('todo', { completed: todo.completed })}\n        onDoubleClick={(event) => {\n          if (event.target !== inputRef.current) {\n            setIsEditing(true);\n          }\n        }}\n      >\n        {/* eslint-disable-next-line */}\n        <label className=\"todo__status-label\">\n          <input\n            ref={inputRef}\n            type=\"checkbox\"\n            className=\"todo__status\"\n            onChange={(event) => {\n              if (updateTodo) {\n                updateTodo(event, todo);\n              }\n            }}\n            checked={todo.completed}\n          />\n        </label>\n\n        {isEditing ? (\n          <form>\n            <input\n              type=\"text\"\n              ref={inputRef}\n              className=\"todo__title-field\"\n              placeholder=\"Empty todo will be deleted\"\n              value={editingValue}\n              onChange={(event) => {\n                setEditingValue(event.target.value);\n              }}\n              onKeyDown={(event) => onKeyDown(event)}\n              onBlur={onBlur}\n            />\n          </form>\n\n        ) : (\n          <>\n            <span className=\"todo__title\">{todo.title}</span>\n\n            <button\n              type=\"button\"\n              className=\"todo__remove\"\n              onClick={() => {\n                if (clearTodo) {\n                  clearTodo(todo);\n                }\n              }}\n            >\n              ×\n            </button>\n          </>\n        )}\n\n        <div className={classNames(\n          'modal overlay', {\n            'is-active': loadDelete.includes(\n              todo.id,\n            ),\n          },\n        )}\n        >\n          <div className=\"modal-background has-background-white-ter\" />\n          <div className=\"loader\" />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { TodoItem } from '../TodoItem';\nimport { Todo } from '../../types/Todo';\nimport { deleteTodo, modifyTodo } from '../../api/todos';\nimport { LoadDeleteContext } from '../../LoadDeleteContext';\n\ntype Props = {\n  todos: Todo[];\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  removeTodo: (id: number) => void;\n  tempTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setTodos,\n  removeTodo,\n  tempTodo,\n}) => {\n  const { setLoadDelete } = useContext(LoadDeleteContext);\n\n  const updateTodo = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    todo: Todo,\n  ) => {\n    const { checked } = event.target;\n\n    setLoadDelete([todo.id]);\n    modifyTodo(todo.id, { ...todo, completed: checked })\n      .then(() => {\n        setTodos((prevState: Todo[]) => {\n          return prevState.map(prevTodo => {\n            if (prevTodo.id === todo.id) {\n              return {\n                ...todo,\n                completed: checked,\n              };\n            }\n\n            return prevTodo;\n          });\n        });\n      })\n      .catch(() => {\n        throw new Error('Unable to update todo');\n      })\n      .finally(() => setLoadDelete([]));\n  };\n\n  const clearTodo = (todo: Todo) => {\n    setLoadDelete([todo.id]);\n    deleteTodo(todo.id)\n      .then(() => removeTodo(todo.id))\n      .catch(() => 'Unable to delete todo')\n      .finally(\n        () => setLoadDelete([]),\n      );\n  };\n\n  const editingTitle = (todo: Todo, title: string) => {\n    setLoadDelete([todo.id]);\n\n    modifyTodo(todo.id, { ...todo, title })\n      .then(() => {\n        setTodos((prevState: Todo[]) => {\n          return prevState.map(prevTodo => {\n            if (prevTodo.id === todo.id) {\n              return {\n                ...prevTodo,\n                title,\n              };\n            }\n\n            return prevTodo;\n          });\n        });\n      })\n      .catch(() => 'Unable to edit todo')\n      .finally(\n        () => setLoadDelete([]),\n      );\n  };\n\n  return (\n    <ul className=\"todo-list\">\n      <TransitionGroup>\n        {todos.map(todo => (\n          <CSSTransition\n            key={todo.id}\n            timeout={300}\n            classNames=\"item\"\n          >\n            <TodoItem\n              todo={todo}\n              key={todo.id}\n              updateTodo={updateTodo}\n              clearTodo={clearTodo}\n              editingTitle={editingTitle}\n            />\n          </CSSTransition>\n        ))}\n\n        {tempTodo && (\n          <CSSTransition\n            key={tempTodo.id}\n            timeout={500}\n            classNames=\"temp-item\"\n          >\n            <TodoItem\n              todo={tempTodo}\n              key={tempTodo.id}\n            />\n          </CSSTransition>\n        )}\n      </TransitionGroup>\n    </ul>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { StatusOfFilter } from '../../utils/StatusOfFilter';\n\ntype Props = {\n  setFilter: React.Dispatch<React.SetStateAction<StatusOfFilter>>;\n  filter: StatusOfFilter;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ filter, setFilter }) => {\n  const handleAllClick = () => setFilter(StatusOfFilter.All);\n  const handleActiveClick = () => setFilter(StatusOfFilter.Active);\n  const handleCompletedClick = () => setFilter(StatusOfFilter.Completed);\n\n  return (\n    <nav className=\"filter\">\n      <a\n        href=\"#/\"\n        className={classNames('filter__link',\n          { selected: filter === StatusOfFilter.All })}\n        onClick={handleAllClick}\n      >\n        All\n      </a>\n\n      <a\n        href=\"#/active\"\n        className={classNames('filter__link',\n          { selected: filter === StatusOfFilter.Active })}\n        onClick={handleActiveClick}\n      >\n        Active\n      </a>\n\n      <a\n        href=\"#/completed\"\n        className={classNames('filter__link',\n          { selected: filter === StatusOfFilter.Completed })}\n        onClick={handleCompletedClick}\n      >\n        Completed\n      </a>\n    </nav>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState, useContext } from 'react';\nimport classNames from 'classnames';\nimport { UserWarning } from './UserWarning';\nimport {\n  getTodos, postTodos, deleteTodo, modifyTodo,\n} from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { TodoFilter } from './components/TodoFilter';\nimport { StatusOfFilter } from './utils/StatusOfFilter';\nimport { LoadDeleteContext } from './LoadDeleteContext';\n\nconst USER_ID = 9948;\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState(StatusOfFilter.All);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [value, setValue] = useState('');\n\n  const completedTodos = todos.filter(todo => todo.completed);\n  const notCompletedTodos = todos.filter(todo => !todo.completed);\n\n  const { setLoadDelete } = useContext(LoadDeleteContext);\n\n  const removeTodo = (id: number) => {\n    setTodos((prevState) => prevState.filter(todo => todo.id !== id));\n  };\n\n  useEffect(() => {\n    async function fetchTodos() {\n      try {\n        const data = await getTodos(USER_ID);\n\n        setTodos(data);\n      } catch (error) {\n        setErrorMessage('Unable to fetch todos');\n      }\n    }\n\n    fetchTodos();\n  }, []);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setTimeout(() => {\n        setErrorMessage('');\n      }, 3000);\n    }\n  }, [errorMessage]);\n\n  const updatedTodos = (newTodo: Todo) => {\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n  };\n\n  const clearCompletedTodos = () => {\n    const idOfCompletedTodos = completedTodos.map(item => item.id);\n\n    setLoadDelete([...idOfCompletedTodos]);\n\n    idOfCompletedTodos.forEach(id => (\n      deleteTodo(id)\n        .then(() => removeTodo(id))\n        .catch(() => {\n          throw new Error('Clear completed error');\n        })\n        .finally(\n          () => setLoadDelete([]),\n        )\n    ));\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (event.currentTarget.value.trim()) {\n        const newTodo = {\n          userId: USER_ID,\n          title: event.currentTarget.value,\n          completed: false,\n        };\n\n        const newTempTodo = {\n          id: 0,\n          userId: USER_ID,\n          title: event.currentTarget.value,\n          completed: false,\n        };\n\n        setLoadDelete([newTempTodo.id]);\n        setTempTodo(newTempTodo);\n\n        postTodos(newTodo).then(\n          (data) => updatedTodos(data),\n        ).catch(\n          () => setErrorMessage('Unable to add todo'),\n        ).finally(() => {\n          setTempTodo(null);\n          setLoadDelete([]);\n        });\n      } else {\n        setErrorMessage(\"Title can't be empty\");\n      }\n\n      setValue('');\n    }\n  };\n\n  const filteredTodos = todos.filter((todo) => {\n    switch (filter) {\n      case StatusOfFilter.Active:\n        return !todo.completed;\n      case StatusOfFilter.Completed:\n        return todo.completed;\n      default:\n        return todo;\n    }\n  });\n\n  const handleToggleAll = () => {\n    const idOfAllTodos = todos.map(item => item.id);\n    const isChecked = notCompletedTodos.length === 0;\n\n    setLoadDelete([...idOfAllTodos]);\n\n    todos.forEach(todo => (\n      modifyTodo(todo.id, { ...todo, completed: !isChecked })\n        .then(() => {\n          setTodos(prevTodos => prevTodos.map(\n            currentTodo => ({ ...currentTodo, completed: !isChecked }),\n          ));\n        })\n        .catch(() => {\n          throw new Error('Unable to update todos');\n        })\n        .finally(\n          () => setLoadDelete([]),\n        )\n    ));\n  };\n\n  if (!USER_ID) {\n    return <UserWarning />;\n  }\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <header className=\"todoapp__header\">\n          {todos.length > 0 && (\n            <button\n              type=\"button\"\n              className={classNames(\n                'todoapp__toggle-all',\n                {\n                  active: notCompletedTodos.length === 0,\n                },\n              )}\n              onClick={handleToggleAll}\n            />\n          )}\n\n          <form>\n            <input\n              type=\"text\"\n              className=\"todoapp__new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={value}\n              onChange={(\n                event: React.ChangeEvent<HTMLInputElement>,\n              ) => setValue(event.target.value)}\n              onKeyDown={(event: React.KeyboardEvent<HTMLInputElement>) => {\n                handleKeyDown(event);\n              }}\n              disabled={!!tempTodo}\n            />\n          </form>\n        </header>\n\n        <>\n          <section className=\"todoapp__main\">\n            <TodoList\n              todos={filteredTodos}\n              setTodos={setTodos}\n              removeTodo={removeTodo}\n              tempTodo={tempTodo}\n            />\n          </section>\n\n          {todos.length > 0 && (\n            <footer className=\"todoapp__footer\">\n              <span className=\"todo-count\">\n                {notCompletedTodos.length === 1 ? `${notCompletedTodos.length} item left` : `${notCompletedTodos.length} items left`}\n              </span>\n\n              <TodoFilter filter={filter} setFilter={setFilter} />\n\n              {completedTodos.length > 0 ? (\n                <button\n                  type=\"button\"\n                  className=\"todoapp__clear-completed\"\n                  onClick={clearCompletedTodos}\n                >\n                  Clear completed\n                </button>\n              ) : (\n                <button\n                  style={{ visibility: 'hidden' }}\n                  type=\"button\"\n                  className=\"todoapp__clear-completed\"\n                >\n                  Clear completed\n                </button>\n              )}\n            </footer>\n          )}\n        </>\n      </div>\n\n      <div className={classNames(\n        'notification',\n        'is-danger',\n        'is-light',\n        'has-text-weight-normal',\n        { hidden: errorMessage === '' },\n      )}\n      >\n        <button\n          type=\"button\"\n          className=\"delete\"\n          onClick={() => setErrorMessage('')}\n        />\n        {errorMessage}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { LoadDeleteProvider } from './LoadDeleteContext';\n\nrender(\n  <LoadDeleteProvider>\n    <App />\n  </LoadDeleteProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}